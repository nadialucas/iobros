winning_leg_cand <- read.delim("~/Dropbox/research/policing-politics/data/raw/campaign_contributions/winning_leg_cand.txt")
View(winning_leg_cand)
install.packages("RCurl", dependencies = TRUE)
library("RCurl")
scp("sftp://mercury.chicagobooth.edu", "/kilts/TransUnion_Data/2019_zipped - completed/PRM.EDTOUT.DGMBOOTH.TRADES.A20191231.gz", "Razorback2014", user="framout1")
getwed ("\\\\some.server.address/fs/home/user")
getwd ("\\\\some.server.address/fs/home/user")
getwd ("/mercury.chicagobooth.edu/kilts/TransUnion_Data/")
getwd ("/framout1@mercury.chicagobooth.edu/kilts/TransUnion_Data/")
getwd("/framout1@mercury.chicagobooth.edu/kilts/TransUnion_Data/")
getwd()
setwd("/framout1@mercury.chicagobooth.edu/kilts/TransUnion_Data/")
setwd("mercury.chicagobooth.edu/kilts/TransUnion_Data/")
setwd("smb://home.chicagobooth.edu/home/phd/framout1")
setwd("smb://home.chicagobooth.edu/home/phd/framout1")
# title:    ps3-a.R
# authors:  nadia lucas and fern ramoutar
# updated:  march 2021
#================================================#
# set up
#================================================#
# packages
library(tidyverse)
library(tigris)
library(sf)
library(RColorBrewer)
library(ggmap)
library(ggthemes)
library(mapview)
library(webshot)
library(ggpubr)
library(Hmisc)
library(knitr)
# set directory
ddir <- "/Users/fernramoutar/Dropbox/github/iobros/pset3"
setwd(ddir)
#================================================#
# summary statistics
#================================================#
# load dataset
stamps <-
read_csv("ps3.csv")
house_stamps <- stamps %>%
rename(target = "realisation in final auAtion") %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(lot_stamps, test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(lot_stamps, newcol = rep(1,nrow(lot_stamps)))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0))
lot_stamps
<- stamps %>%
rename(payment = "Net  Payment")
lot_stamps
<- stamps
lot_stamps <- stamps
lot_stamps <- stamps %>%
rename(payment = "Net  Payment")
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(lot_stamps, newcol = rep(1,nrow(lot_stamps)))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = 1)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones))
View(lot_stamps)
test <- summarise(ring_won = sum(won), total_lots = sum(ones))
test <- lot_stamps %>% summarise(ring_won = sum(won), total_lots = sum(ones))
View(test)
test <- lot_stamps %>% summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
View(test)
View(house_stamps)
View(lot_stamps)
View(test)
View(stamps)
# packages
library(tidyverse)
library(tigris)
library(sf)
library(RColorBrewer)
library(ggmap)
library(ggthemes)
library(mapview)
library(webshot)
library(ggpubr)
library(Hmisc)
library(knitr)
# set directory
ddir <- "/Users/fernramoutar/Dropbox/github/iobros/pset3"
setwd(ddir)
#================================================#
# summary statistics
#================================================#
# load dataset
stamps <-
read_csv("ps3.csv")
house_stamps <- stamps %>%
rename(target = "realisation in final auAtion") %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
View(house_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(lot_stamps$payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
View(stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE)
View(stamps)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
mutate(uhhh = sum(urgh)) %>%
mutate(fuck = sum(avg_est))
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est))
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
mutate(uhhh = sum(urgh)) %>%
mutate(fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck))
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
mutate(uhhh = sum(urgh)) %>%
mutate(fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est))
View(lot_stamps)
lot_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
View(lot_stamps)
lot_stamps <- stamps %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
View(lot_stamps)
more_stamps <- stamps
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
group_by(house,lot)
View(more_stamps)
more_stamps <- stamps
rename(payment = "Net  Payment")
View(more_stamps)
more_stamps <- stamps
rename(payment = "Net  Payment")
stamps <-
read_csv("ps3.csv")
more_stamps <- stamps
rename(payment = "Net  Payment")
View(more_stamps)
more_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0))
View(more_stamps)
more_stamps <- stamps %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
View(more_stamps)
View(lot_stamps)
stamps <-
read_csv("ps3.csv")
house_stamps <- stamps %>%
rename(target = "realisation in final auAtion") %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
View(house_stamps)
View(house_stamps)
right_join <- merge(house_stamps, lot_stamps, by = "house", all.y = TRUE)
View(right_join)
right_join <- merge(right_join, more_stamps, by = "house", all.y = TRUE)
View(right_join)
View(stamps)
stamps <-
read_csv("ps3.csv") %>%
rename(target = "realisation in final auAtion") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
rename(payment = "Net  Payment")
View(stamps)
number_stamps <- stamps
View(number_stamps)
number_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder))
View(number_stamps)
number_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
group_by(ringers) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
View(number_stamps)
number_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder))
stamps <-
read_csv("ps3.csv") %>%
rename(target = "realisation in final auAtion") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
rename(payment = "Net  Payment") %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
mutate(test = ifelse(payment < 0, 1, 0))
# load dataset
stamps <-
read_csv("ps3.csv") %>%
rename(target = "realisation in final auAtion") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
rename(payment = "Net  Payment")
# mean + sd of knockout/target bids
house_stamps <- stamps %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
# pct value won
lot_stamps <- stamps %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
stamps <-
read_csv("ps3.csv") %>%
rename(target = "realisation in final auAtion") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
rename(payment = "Net  Payment")
# mean + sd of knockout/target bids
house_stamps <- stamps %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
# pct value won
lot_stamps <- stamps %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
# pct lots won + total lots
more_stamps <- stamps %>%
mutate(test = ifelse(payment < 0, 1, 0)) %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones)) %>%
mutate(pct_won = ring_won/total_lots)
stamps <-
read_csv("ps3.csv") %>%
rename(target = "realisation in final auAtion") %>%
rename(min_est = "EstDated MinDum") %>%
rename(max_est = "EstDated MaxDum") %>%
rename(payment = "Net  Payment") %>%
mutate(test = ifelse(payment < 0, 1, 0))
View(stamps)
# mean + sd of knockout/target bids
house_stamps <- stamps %>%
group_by(house) %>%
summarise(house_target=mean(target), house_target_sd = sd(target),
house_knockout = mean(bid), house_knockout_sd = sd(bid))
View(house_stamps)
# pct value won
lot_stamps <- stamps %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE)
View(lot_stamps)
# pct value won
lot_stamps <- stamps %>%
mutate(avg_est = (min_est + max_est)/2) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(urgh = test * avg_est) %>%
group_by(house) %>%
summarise(uhhh = sum(urgh), fuck = sum(avg_est)) %>%
mutate(pct_value = uhhh / fuck)
View(lot_stamps)
# pct lots won + total lots
more_stamps <- stamps %>%
group_by(house,lot) %>%
summarise(won=sum(test))
View(more_stamps)
# pct lots won + total lots
more_stamps <- stamps %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1)
# pct lots won + total lots
more_stamps <- stamps %>%
group_by(house,lot) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1) %>%
group_by(house) %>%
summarise(ring_won = sum(won), total_lots = sum(ones))
bidder_stamps <- stamps
View(bidder_stamps)
bidder_stamps <- stamps %>%
distinct(lot, .keep_all = TRUE)
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder))
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
distinct(lot, .keep_all = TRUE)
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
distinct(lot, .keep_all = TRUE) %>%
group_by(ringers) %>%
summarise(won=sum(test))
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
distinct(lot, .keep_all = TRUE) %>%
group_by(ringers) %>%
summarise(won=sum(test)) %>%
mutate(ones = 1)
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(ones = 1) %>%
group_by(ringers) %>%
summarise(won=sum(test), total = sum(ones))
bidder_stamps <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
distinct(lot, .keep_all = TRUE) %>%
mutate(ones = 1) %>%
group_by(ringers) %>%
summarise(won=sum(test), total = sum(ones)) %>%
mutate(pct_won = won/total)
final <- subset(stamps, bidder < 3)
View(final)
final <- subset(stamps, ringers < 3)
final <- subset(stamps, ringers < 3)
final <- subset(bidder_stamps, ringers < 3)
View(final)
View(final)
final <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder)) %>%
subset(bidder_stamps, ringers < 3)
redo <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder))
final <- subset(redo, ringers < 3)
redo <- stamps %>%
group_by(house,lot) %>%
mutate(ringers = max(bidder))
ungroup
final <- subset(redo, ringers < 3)
View(final)
View(stamps)
